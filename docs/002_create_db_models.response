{
    "models": [
        {
            "classname": "Player",
            "code": "class Player(Base):\\n    __tablename__ = 'player'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    name = Column(String, nullable=False)\\n    birthdate = Column(Date)\\n    position_id = Column(Integer, ForeignKey('position.id'))\\n    team_id = Column(Integer, ForeignKey('team.id'))",
            "description": "Stores player information including name, birthdate, position, and team.",
            "name": "Player"
        },
        {
            "classname": "Position",
            "code": "class Position(Base):\\n    __tablename__ = 'position'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    title = Column(String, nullable=False)\\n    season_start = Column(Date)\\n    season_end = Column(Date)",
            "description": "Stores data about football player positions.",
            "name": "Position"
        },
        {
            "classname": "Team",
            "code": "class Team(Base):\\n    __tablename__ = 'team'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    name = Column(String, nullable=False)\\n    city = Column(String)\\n    date_formed = Column(Date)\\n    date_ceased = Column(Date)",
            "description": "Stores information about teams, including name, city, date they were formed, and date they ceased operations.",
            "name": "Team"
        },
        {
            "classname": "Statistic",
            "code": "class Statistic(Base):\\n    __tablename__ = 'statistic'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    player_id = Column(Integer, ForeignKey('player.id'), nullable=False)\\n    games_played = Column(Integer)\\n    touchdowns = Column(Integer)\\n    yards = Column(Integer)",
            "description": "Records player statistics including games played, touchdowns, and yards.",
            "name": "Statistic"
        },
        {
            "classname": "Benefit",
            "code": "class Benefit(Base):\\n    __tablename__ = 'benefit'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    player_id = Column(Integer, ForeignKey('player.id'), nullable=False)\\n    medical = Column(String)\\n    financial = Column(String)",
            "description": "Tracks potential benefits for each player including medical and financial.",
            "name": "Benefit"
        },
        {
            "classname": "Merchandise",
            "code": "class Merchandise(Base):\\n    __tablename__ = 'merchandise'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    item_name = Column(String, nullable=False)\\n    is_autographed = Column(Boolean)\\n    price = Column(Float)",
            "description": "Tracks available marketing merchandise and whether they are autographed.",
            "name": "Merchandise"
        },
        {
            "classname": "Order",
            "code": "class Order(Base):\\n    __tablename__ = 'order'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    fan_id = Column(Integer, ForeignKey('fan.id'), nullable=False)\\n    merchandise_id = Column(Integer, ForeignKey('merchandise.id'), nullable=False)\\n    order_date = Column(Date)\\n    quantity = Column(Integer)\\n    total_price = Column(Float)",
            "description": "Holds information about orders from fans for merchandise items.",
            "name": "Order"
        },
        {
            "classname": "Fan",
            "code": "class Fan(Base):\\n    __tablename__ = 'fan'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    name = Column(String, nullable=False)\\n    email = Column(String)\\n    address = Column(String)",
            "description": "Represents a fan placing an order for merchandise.",
            "name": "Fan"
        },
        {
            "classname": "AutographRequest",
            "code": "class AutographRequest(Base):\\n    __tablename__ = 'autograph_request'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    player_id = Column(Integer, ForeignKey('player.id'), nullable=False)\\n    fan_id = Column(Integer, ForeignKey('fan.id'), nullable=False)",
            "description": "Keeps record of autograph requests by fans for specific players.",
            "name": "AutographRequest"
        },
        {
            "classname": "HistoricTeam",
            "code": "class HistoricTeam(Base):\\n    __tablename__ = 'historic_team'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    name = Column(String, nullable=False)\\n    city = Column(String)\\n    date_formed = Column(Date)\\n    date_ceased = Column(Date)",
            "description": "Contains historical data about teams that have existed in the past.",
            "name": "HistoricTeam"
        },
        {
            "classname": "CareerStats",
            "code": "class CareerStats(Base):\\n    __tablename__ = 'career_stats'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    player_id = Column(Integer, ForeignKey('player.id'), nullable=False)\\n    total_games = Column(Integer)\\n    total_touchdowns = Column(Integer)\\n    average_yards = Column(Float)",
            "description": "Aggregates career statistics for players.",
            "name": "CareerStats"
        },
        {
            "classname": "SignedMerchandise",
            "code": "class SignedMerchandise(Base):\\n    __tablename__ = 'signed_merchandise'\\n\\n    id = Column(Integer, primary_key=True, autoincrement=True)\\n    merchandise_id = Column(Integer, ForeignKey('merchandise.id'), nullable=False)\\n    player_id = Column(Integer, ForeignKey('player.id'), nullable=False)",
            "description": "Records signed merchandise available for fans.",
            "name": "SignedMerchandise"
        }
    ],
    "rules": [],
    "test_data": "Create test data for the database.",
    "test_data_rows": [
        {
            "test_data_row_variable": "player1",
            "code": "player1 = Player(id=1, name=\"John Doe\", birthdate=date(1990, 4, 15), position_id=1, team_id=1)"
        },
        {
            "test_data_row_variable": "player2",
            "code": "player2 = Player(id=2, name=\"Jane Smith\", birthdate=date(1992, 8, 22), position_id=2, team_id=2)"
        },
        {
            "test_data_row_variable": "player3",
            "code": "player3 = Player(id=3, name=\"Jake Williams\", birthdate=date(1985, 12, 5), position_id=3, team_id=3)"
        },
        {
            "test_data_row_variable": "player4",
            "code": "player4 = Player(id=4, name=\"Emily Turner\", birthdate=date(1993, 6, 19), position_id=4, team_id=4)"
        },
        {
            "test_data_row_variable": "position1",
            "code": "position1 = Position(id=1, title=\"Quarterback\", season_start=date(2000, 9, 1), season_end=None)"
        },
        {
            "test_data_row_variable": "position2",
            "code": "position2 = Position(id=2, title=\"Wide Receiver\", season_start=date(2001, 9, 1), season_end=date(2010, 2, 1))"
        },
        {
            "test_data_row_variable": "position3",
            "code": "position3 = Position(id=3, title=\"Linebacker\", season_start=date(1999, 9, 1), season_end=None)"
        },
        {
            "test_data_row_variable": "position4",
            "code": "position4 = Position(id=4, title=\"Kicker\", season_start=date(2005, 9, 1), season_end=date(2015, 2, 1))"
        },
        {
            "test_data_row_variable": "team1",
            "code": "team1 = Team(id=1, name=\"Ravens\", city=\"Baltimore\", date_formed=date(1996, 11, 6), date_ceased=None)"
        },
        {
            "test_data_row_variable": "team2",
            "code": "team2 = Team(id=2, name=\"Giants\", city=\"New York\", date_formed=date(1925, 8, 1), date_ceased=None)"
        },
        {
            "test_data_row_variable": "team3",
            "code": "team3 = Team(id=3, name=\"Patriots\", city=\"New England\", date_formed=date(1959, 11, 16), date_ceased=None)"
        },
        {
            "test_data_row_variable": "team4",
            "code": "team4 = Team(id=4, name=\"Bears\", city=\"Chicago\", date_formed=date(1920, 9, 17), date_ceased=None)"
        }
    ],
    "test_data_sqlite": "Insert test data for the database in SQLite format.",
    "name": "NFLDataModelSystem"
}